swagger: '2.0'
info:
  version: '${api.version}'
  title: '${project.artifactId}'
  x-ibm-name: '${artifactId}'
  description: '${project.artifactId}'
  contact:
    name: Edwin
host: $(catalog.host)
basePath: '/${project.artifactId}/${api.version}'
paths:
  /photos:
    get:
      responses:
        '200':
          description: 200 OK
  '/albums/{id}':
    get:
      responses:
        '200':
          description: 200 OK
    parameters:
      - name: id
        type: string
        required: true
        in: path
  /albums:
    get:
      responses:
        '200':
          description: 200 OK
  '/comments/{id}':
    get:
      responses:
        '200':
          description: 200 OK
    parameters:
      - name: id
        type: string
        required: true
        in: path
        description: comments id
  /comments:
    get:
      responses:
        '200':
          description: 200 OK
  '/posts/{id}/comments':
    get:
      responses:
        '200':
          description: 200 OK
    parameters:
      - name: id
        type: string
        required: true
        in: path
        description: post id
  '/posts/{id}':
    get:
      responses:
        '200':
          description: 200 OK
    parameters:
      - name: id
        type: string
        required: true
        in: path
        description: post id
  /posts:
    get:
      responses:
        '200':
          description: 200 OK
  '/users/{id}':
    get:
      responses:
        '200':
          description: 200 OK
    parameters:
      - name: id
        type: string
        required: true
        in: path
        description: user id
  /users:
    get:
      responses:
        '200':
          description: 200 OK
securityDefinitions:
  clientID:
    description: ''
    in: header
    name: X-IBM-Client-Id
    type: apiKey
security:
  - clientID: []
x-ibm-configuration:
  assembly:
    execute:
      - operation-switch:
          title: operation-switch
          case:
            - operations:
                - verb: get
                  path: /photos
              execute:
                - gatewayscript:
                    title: getPhotos
                    source: 'apim.setvariable(''operation'',''getPhotos'');'
            - operations:
                - verb: get
                  path: '/albums/{id}'
              execute:
                - gatewayscript:
                    title: getAlbumById
                    source: 'apim.setvariable(''operation'',''getAlbumById'');'
            - operations:
                - verb: get
                  path: /albums
              execute:
                - gatewayscript:
                    title: getAlbums
                    source: 'apim.setvariable(''operation'',''getAlbums'');'
            - operations:
                - verb: get
                  path: '/comments/{id}'
              execute:
                - gatewayscript:
                    title: getCommentsById
                    source: 'apim.setvariable(''operation'',''getCommentsById'');'
            - operations:
                - verb: get
                  path: /comments
              execute:
                - gatewayscript:
                    title: getComments
                    source: 'apim.setvariable(''operation'',''getComments'');'
            - operations:
                - verb: get
                  path: '/posts/{id}/comments'
              execute:
                - gatewayscript:
                    title: getCommentsByPostId
                    source: 'apim.setvariable(''operation'',''getCommentsByPostId'');'
            - operations:
                - verb: get
                  path: '/posts/{id}'
              execute:
                - gatewayscript:
                    title: getPostsById
                    source: 'apim.setvariable(''operation'',''getPostsById'');'
            - operations:
                - verb: get
                  path: /posts
              execute:
                - gatewayscript:
                    title: getPosts
                    source: 'apim.setvariable(''operation'',''getPosts'');'
            - operations:
                - verb: get
                  path: '/users/{id}'
              execute:
                - gatewayscript:
                    title: getUsersById
                    source: 'apim.setvariable(''operation'',''getUsersById'');'
            - operations:
                - verb: get
                  path: /users
              execute:
                - gatewayscript:
                    title: getUsers
                    source: 'apim.setvariable(''operation'',''getUsers'');'
      - gatewayscript:
          title: Log Request
          source: >
            var util = require('${api.framework.dir}/Util.js');

            var apiConfig =
            util.loadApiConfig('${api.framework.dir}/','${api.config.dir}/',apim.getvariable('env.path'),'${project.artifactId}}','${api.version}',
            console);


            // log request headers

            apiConfig.logHeaders(apim);

            apiConfig.logBody(apim);
      - gatewayscript:
          title: Setup
          source: >-
            // Load API Config

            var util = require('${api.framework.dir}/Util.js');

            var apiConfig =
            util.loadApiConfig('${api.framework.dir}/','${api.config.dir}/',apim.getvariable('env.path'),'${project.artifactId}}','${api.version}',
            console);


            // get the operation and method being executed

            var operation = apim.getvariable('operation');

            var method  = apim.getvariable('request.verb');


            // set the targetUrl

            apim.setvariable('targetUrl',apiConfig.getOperation(operation).getMethod(method).targetUrl);


            apiConfig.logger.info(apim.getvariable('request.uri'));

            apiConfig.logger.info(apim.getvariable('request.path'));
      - proxy:
          title: Invoke uService
          timeout: 60
          verb: keep
          cache-response: time-to-live
          cache-ttl: 900
          target-url: $(targetUrl)
      - gatewayscript:
          title: Log Response
          source: >-
            var util = require('${api.framework.dir}/Util.js');

            var apiConfig =
            util.loadApiConfig('${api.framework.dir}/','${api.config.dir}/',apim.getvariable('env.path'),'${project.artifactId}}','${api.version}',
            console);


            // log request headers

            apiConfig.logHeaders(apim);

            apiConfig.logBody(apim);
  catalogs:
    catalog-name-1:
      properties:
        new-property-1: ''
  gateway: datapower-gateway
consumes:
  - application/json
schemes:
  - https
produces:
  - application/json
