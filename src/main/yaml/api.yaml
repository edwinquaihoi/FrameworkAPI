swagger: '2.0'
info:
  version: '${api.version}'
  title: '${project.artifactId}'
  x-ibm-name: '${artifactId}'
  description: FrameworkAPI - It's cool
host: $(catalog.host)
basePath: '/${api.organization}/${project.artifactId}/${api.version}'
paths:
  /path-1:
    get:
      responses:
        '200':
          description: 200 OK
  /path:
    get:
      responses:
        '200':
          description: 200 OK
securityDefinitions:
  clientID:
    description: ''
    in: header
    name: X-IBM-Client-Id
    type: apiKey
security:
  - clientID: []
x-ibm-configuration:
  assembly:
    execute:
      - gatewayscript:
          title: Log Request
          source: >-
            var frameworkDir = 'local:///ondisk/js/apic/framework/';

            var configDir = '${api.config.dir}'; 

            var util = require(frameworkDir + 'Util.js');

            var apiConfig = util.loadApiConfig(frameworkDir,
            configDir,"PublicSandbox", "FrameworkAPI","1.0.0", console);


            apiConfig.info('Hello World Start');
      - proxy:
          title: proxy
          timeout: 60
          verb: keep
          cache-response: protocol
          cache-ttl: 900
          target-url: 'http://jsonplaceholder.typicode.com/users'
          
      - gatewayscript:
          title: Log Response
          source: >-
            var frameworkDir = 'local:///ondisk/js/apic/framework/';

            var configDir = '${api.config.dir}'; 

            var util = require(frameworkDir + 'Util.js');

            var apiConfig = util.loadApiConfig(frameworkDir,
            configDir,"PublicSandbox", "FrameworkAPI","1.0.0", console);


            apiConfig.info('Hello World End');
  catalogs:
    catalog-name-1:
      properties:
        new-property-1: ''
  gateway: datapower-gateway
consumes:
  - application/xml
  - application/json
schemes:
  - https
produces:
  - application/xml
  - application/json
